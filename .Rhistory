library(dplyr)
# Load the data
data <- read.csv("data/5-min_data.csv")
# Load the data
data <- read.csv("data/5-min_data.txt")
library(dplyr)
library(ggplot2)
# Load the data
full_data <- read.csv("data/5-min_data.txt")
uniqe(full_data$X.TICKER.)
unique(full_data$X.TICKER.)
unique(full_data$X.VOL.)
full_data |> filter(X.TICKER. %in% tickers) -> sub.data
# Filter the data
tickers = c("^DJI", "^SPX", "^HSI", "^SSEC")
full_data |> filter(X.TICKER. %in% tickers) -> sub.data
p <- ggplot(sub.data, aes(x = X.DATE., y = X.CLOSE.)) +
geom_line(aes(color = X.TICKER.)) +
labs(title = "Stock Market Indexes", x = "Date", y = "Close Price") +
theme_minimal())
p <- ggplot(sub.data, aes(x = X.DATE., y = X.CLOSE.)) +
geom_line(aes(color = X.TICKER.)) +
labs(title = "Stock Market Indexes", x = "Date", y = "Close Price") +
theme_minimal()
p
p <- ggplot(sub.data, aes(x = X.DATE., y = X.CLOSE.)) +
geom_line(aes(color = X.TICKER.)) +
labs(title = "Stock Market Indexes", x = "Date", y = "Close Price") +
theme_minimal() + facet_wrap(~X.TICKER., scales = "free_y")
p
unique(full_data$X.DATE.)
full_data$X.DATE. <- as.Date(full_data$X.DATE., format = "%Y%m%d")
full_data |> filter(X.TICKER. %in% tickers, X.DATE) -> sub.data
full_data$X.DATE.
# Load the data
full_data <- read.csv("data/5-min_data.txt")
as.Date(full_data$X.DATE., format = "%Y%m%d")
# full_data$X.DATE. <- as.Date(full_data$X.DATE., format = "%Y%m%d")
full_data |> filter(X.TICKER. %in% tickers) |> filter(X.DATE. == 20240325) -> sub.data
p <- ggplot(sub.data, aes(x = X.TIME., y = X.CLOSE.)) +
geom_line(aes(color = X.TICKER.)) +
labs(title = "Stock Market Indexes", x = "Date", y = "Close Price") +
theme_minimal() + facet_wrap(~X.TICKER., scales = "free_y")
p
p <- ggplot(sub.data, aes(x = X.TIME., y = X.CLOSE.)) +
labs(title = "Stock Market Indexes", x = "Date", y = "Close Price") +
theme_minimal() + facet_wrap(~X.TICKER., scales = "free_y")
p
p <- ggplot(sub.data, aes(x = X.TIME., y = X.CLOSE.)) + geom_line() +
labs(title = "Stock Market Indexes", x = "Date", y = "Close Price") +
theme_minimal() + facet_wrap(~X.TICKER., scales = "free_y")
p
# Filter the data
tickers = c("^DJI", "^SPX")
# full_data$X.DATE. <- as.Date(full_data$X.DATE., format = "%Y%m%d")
full_data |> filter(X.TICKER. %in% tickers) |> filter(X.DATE. == 20240325) -> sub.data
p <- ggplot(sub.data, aes(x = X.TIME., y = X.CLOSE.)) + geom_line() +
labs(title = "Stock Market Indexes", x = "Date", y = "Close Price") +
theme_minimal() + facet_wrap(~X.TICKER., scales = "free_y")
p
? as.POSIXlt
? as.POSIXct
df <- read.csv("data/AAPL_1min_sample.csv")
View(df)
View(df)
df$timestamp |> as.POSIXct(format = "%Y-%m-%d %H:%M:%S") -> df$timestamp
p <- ggplot(df, aes(x = timestamp, y = close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal()
p
hist(df$timestamp)
hist(df$timestamp, breaks = 10)
unique(as.Date(df$timestamp))
# filter out to just one week from 2024-04-15 to 2024-04-19
df |> filter(timestamp >= as.POSIXct("2024-04-15 00:00:00") & timestamp <= as.POSIXct("2024-04-19 23:59:59")) -> df
p <- ggplot(df, aes(x = timestamp, y = close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal()
p
df <- read.csv("data/AAPL_1min_sample.csv")
df$timestamp |> as.POSIXct(format = "%Y-%m-%d %H:%M:%S") -> df$timestamp
# filter out to just one week from 2024-04-15 to 2024-04-19
df |> filter(timestamp >= as.POSIXct("2024-04-15 00:00:00") & timestamp <= as.POSIXct("2024-04-15 23:59:59")) -> df
p <- ggplot(df, aes(x = timestamp, y = close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal()
p
df <- read.csv("data/AAPL_1min_sample.csv")
df$timestamp |> as.POSIXct(format = "%Y-%m-%d %H:%M:%S") -> df$timestamp
p <- ggplot(df, aes(x = timestamp, y = close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal()
p
df <- read.csv("data/AAPL_1min_2024.csv")
df$timestamp |> as.POSIXct(format = "%Y-%m-%d %H:%M:%S") -> df$timestamp
df$Date |> as.POSIXct(format = "%Y-%m-%d %H:%M:%S") -> df$Date
p <- ggplot(df, aes(x = Date, y = close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal()
p
p <- ggplot(df, aes(x = Date, y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal()
p
p <- ggplot(df, aes(x = Date, y = Close)) + geom_smooth() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal()
p
p <- ggplot(df, aes(x = Date, y = Close)) + geom_smooth(method = 'lm') +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal()
p
p <- ggplot(df, aes(x = Date, y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal()
p <- ggplot(df, aes(x = Date, y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(method = 'gam', formula = y ~ s(x, bs = "cs"))
p <- ggplot(df, aes(x = Date, y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(method = 'gam', formula = y ~ s(x, bs = "cs"))
p
# filter out to just trading hours (9:30am - 4:00pm)
df |> filter(as.numeric(format(Date, "%H")) >= 9 & as.numeric(format(Date, "%H")) < 16) -> df
p <- ggplot(df, aes(x = Date, y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(method = 'gam', formula = y ~ s(x, bs = "cs"))
p
df <- read.csv("data/AAPL_1min_2024-2.csv")
df <- read.csv("data/AAPL_1min_2024-02.csv")
df$Date |> as.POSIXct(format = "%Y-%m-%d %H:%M:%S") -> df$Date
# filter out to just trading hours (9:30am - 4:00pm)
df |> filter(as.numeric(format(Date, "%H")) >= 9 & as.numeric(format(Date, "%H")) < 16) -> df
p <- ggplot(df, aes(x = Date, y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(method = 'gam', formula = y ~ s(x, bs = "cs"))
p
df <- read.csv("data/AAPL_1min_2024-03.csv")
df$Date |> as.POSIXct(format = "%Y-%m-%d %H:%M:%S") -> df$Date
# filter out to just trading hours (9:30am - 4:00pm)
df |> filter(as.numeric(format(Date, "%H")) >= 9 & as.numeric(format(Date, "%H")) < 16) -> df
p <- ggplot(df, aes(x = Date, y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(method = 'gam', formula = y ~ s(x, bs = "cs"))
p
# check if we have the same amount of observations each day:
df |> group_by(format(Date, "%Y-%m-%d")) |> summarise(n = n()) |> filter(n != 390)
# check if we have the same amount of observations each day:
df |> group_by(format(Date, "%Y-%m-%d")) |> summarize(n = n()) |> filter(n != 390)
library(tidyverse)
# check if we have the same amount of observations each day:
df |> group_by(format(Date, "%Y-%m-%d")) |> summarize(n = n()) |> filter(n != 390)
# check if we have the same amount of observations each day:
df |> group_by(format(Date, "%Y-%m-%d")) |> summarize(n = n()) # |> filter(n != 390)
# check if the interval between observations is consistent
df |> arrange(Date) |> mutate(diff = c(0, diff(Date))) |> group_by(diff) |> summarize(n = n())
p <- ggplot(df, aes(x = Date, y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(method = 'gam', formula = y ~ s(x, bs = "cs"))
p
# Sort the df in time order based on date
df |> arrange(Date) -> df
df
p <- ggplot(df, aes(x = 1:nrows(df), y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(method = 'gam', formula = y ~ s(x, bs = "cs"))
p
p <- ggplot(df, aes(x = 1:nrow(df), y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(method = 'gam', formula = y ~ s(x, bs = "cs"))
p
p.no_realtime <- ggplot(df, aes(x = 1:nrow(df), y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(method = 'gam', formula = y ~ s(x, bs = "cs"))
p <- ggplot(df, aes(x = Date, y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(method = 'gam', formula = y ~ s(x, bs = "cs"))
p
# check if we have the same amount of observations each day:
df |> group_by(format(Date, "%Y-%m-%d")) |> summarize(n = n()) # |> filter(n != 390)
# check if the interval between observations is consistent
df |> arrange(Date) |> mutate(diff = c(0, diff(Date))) |> group_by(diff) |> summarize(n = n())
# facet wrap with each day
p <- ggplot(df, aes(x = Date, y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(method = 'gam', formula = y ~ s(x, bs = "cs")) +
facet_wrap(~format(Date, "%Y-%m-%d"))
p
# facet wrap with each day
p <- ggplot(df, aes(x = Date, y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(method = 'gam', formula = y ~ s(x, bs = "cs")) +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p
# facet wrap with each day
p <- ggplot(df, aes(x = Date, y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(method = 'gam', formula = y ~ s(x, bs = "cs")) +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x") + geom_ribbon(aes(ymin = Low, ymax = High), alpha = 0.2)
p
# facet wrap with each day
p <- ggplot(df, aes(x = Date, y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(method = 'gam', formula = y ~ s(x, bs = "cs")) +
geom_ribbon(aes(ymin = Low, ymax = High), alpha = 0.2)
p
# facet wrap with each day
p <- ggplot(df, aes(x = Date, y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(method = 'gam', formula = y ~ s(x, bs = "cs")) +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x") # + geom_ribbon(aes(ymin = Low, ymax = High), alpha = 0.2)
p
# facet wrap with each day
p <- ggplot(df, aes(x = Date, y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(method = 'gam', formula = y ~ s(x, bs = "cs"), alpha = 0.1) +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x") # + geom_ribbon(aes(ymin = Low, ymax = High), alpha = 0.2)
p
# facet wrap with each day
p <- ggplot(df, aes(x = Date, y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + # geom_smooth(method = 'gam', formula = y ~ s(x, bs = "cs"), alpha = 0.1) +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x") # + geom_ribbon(aes(ymin = Low, ymax = High), alpha = 0.2)
p
# facet wrap each day, add volume of each data point to the bottom
p_volume <- ggplot(df, aes(x = Date, y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + # geom_smooth(method = 'gam', formula = y ~ s(x, bs = "cs"), alpha = 0.1) +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x") + geom_bar(aes(y = Volume), stat = "identity")
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'blue') +
geom_bar(aes(y = Volume), stat = "identity", fill = "grey", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'blue') +
geom_bar(aes(y = Volume), stat = "identity", fill = "grey", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_xy")
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'blue') +
geom_bar(aes(y = Volume), stat = "identity", fill = "grey", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free")
p_volume
geom_bar(aes(y = Volume), stat = "identity", fill = "grey", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free")
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + # + geom_line(aes(y = Close), color = 'blue') +
geom_bar(aes(y = Volume), stat = "identity", fill = "grey", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free")
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + # + geom_line(aes(y = Close), color = 'blue') +
geom_bar(aes(y = Volume), stat = "identity", fill = "black", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x") + scale_y_log10()
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + # + geom_line(aes(y = Close), color = 'blue') +
geom_bar(aes(y = Volume), stat = "identity", fill = "black", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x") #+ scale_y_log10()
p_volume
hist(df$Volume)
quantile(df$Volume)
? quantile
quantile(df$Volume, probs = 1:100 * 0.001)
quantile(df$Volume, probs = 1:100 * 0.01)
quantile(df$Volume, probs = 1:200 * 0.005)
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + # + geom_line(aes(y = Close), color = 'blue') +
geom_bar(aes(y = Volume), stat = "identity", fill = "black", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x") +
# force maximum y be 660000
scale_y_continuous(sec.axis = sec_axis(~./660000, name = "Volume")) +
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + # + geom_line(aes(y = Close), color = 'blue') +
geom_bar(aes(y = Volume), stat = "identity", fill = "black", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x") +
# force maximum y be 660000
scale_y_continuous(sec.axis = sec_axis(~./660000, name = "Volume"))
p_volume
? scale
scale_value <- function(x, min_orig, max_orig, min_new, max_new) {
y <- min_new + ((x - min_orig) * (max_new - min_new) / (max_orig - min_orig))
return(y)
}
# scale volume to be within the range of close price for plotting purpuse
df |> mutate(Volume.adj = scale_value(Volume, min(Volume), max(Volume), min(Close), max(Close))) -> df
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'blue') +
geom_bar(aes(y = Volume.adj), stat = "identity", fill = "black", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x") +
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'blue') +
geom_bar(aes(y = Volume.adj), stat = "identity", fill = "black", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'blue') +
geom_line(aes(y = Volume.adj), stat = "identity", fill = "black", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'black') +
geom_line(aes(y = Volume.adj), stat = "identity", fill = "green", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'black') +
geom_line(aes(y = Volume.adj), stat = "identity", color = "green", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'black') +
geom_line(aes(y = Volume.adj), stat = "identity", color = "darkgreen", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
# check if we have the same amount of observations each day:
df |> group_by(format(Date, "%Y-%m-%d")) |> summarize(n = n()) # |> filter(n != 390)
df <- read.csv("data/AAPL_1min_2024-02.csv")
df$Date |> as.POSIXct(format = "%Y-%m-%d %H:%M:%S") -> df$Date
# filter out to just trading hours (9:30am - 4:00pm)
df |> filter(as.numeric(format(Date, "%H")) >= 9 & as.numeric(format(Date, "%H")) < 16) -> df
# check if we have the same amount of observations each day:
df |> group_by(format(Date, "%Y-%m-%d")) |> summarize(n = n()) # |> filter(n != 390)
# check if the interval between observations is consistent
df |> arrange(Date) |> mutate(diff = c(0, diff(Date))) |> group_by(diff) |> summarize(n = n())
# Sort the df in time order based on date
df |> arrange(Date) -> df
p.no_realtime <- ggplot(df, aes(x = 1:nrow(df), y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(method = 'gam', formula = y ~ s(x, bs = "cs"))
scale_value <- function(x, min_orig, max_orig, min_new, max_new) {
y <- min_new + ((x - min_orig) * (max_new - min_new) / (max_orig - min_orig))
return(y)
}
# scale volume to be within the range of close price for plotting purpuse
df |> mutate(Volume.adj = scale_value(Volume, min(Volume), max(Volume), min(Close), max(Close))) -> df
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'black') +
geom_line(aes(y = Volume.adj), stat = "identity", color = "darkgreen", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
# check if we have the same amount of observations each day:
df |> group_by(format(Date, "%Y-%m-%d")) |> summarize(n = n()) # |> filter(n != 390)
df <- read.csv("data/AAPL_1min_2024-02.csv")
df$Date |> as.POSIXct(format = "%Y-%m-%d %H:%M:%S") -> df$Date
# check if we have the same amount of observations each day:
df |> group_by(format(Date, "%Y-%m-%d")) |> summarize(n = n()) # |> filter(n != 390)
# check if the interval between observations is consistent
df |> arrange(Date) |> mutate(diff = c(0, diff(Date))) |> group_by(diff) |> summarize(n = n())
# Sort the df in time order based on date
df |> arrange(Date) -> df
p.no_realtime <- ggplot(df, aes(x = 1:nrow(df), y = Close)) + geom_line() +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(method = 'gam', formula = y ~ s(x, bs = "cs"))
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'black') +
geom_line(aes(y = Volume.adj), stat = "identity", color = "darkgreen", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
# scale volume to be within the range of close price for plotting purpuse
df |> mutate(Volume.adj = scale_value(Volume, min(Volume), max(Volume), min(Close), max(Close))) -> df
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'black') +
geom_line(aes(y = Volume.adj), stat = "identity", color = "darkgreen", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'black') +
geom_line(aes(y = Volume.adj), stat = "identity", color = "darkgreen", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(method = 'gam', formula = y ~ s(x, bs = "cs"), alpha = 0.1) +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'black') +
geom_line(aes(y = Volume.adj), stat = "identity", color = "darkgreen", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(aes(y = Close), method = 'gam', formula = y ~ s(x, bs = "cs"), alpha = 0.1) +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'black') +
geom_line(aes(y = Volume.adj), stat = "identity", color = "darkgreen", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(aes(y = Close), method = 'gam', formula = y ~ s(x, bs = "cs"), alpha = 0.01) +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
? geom_smooth
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'black') +
geom_line(aes(y = Volume.adj), stat = "identity", color = "darkgreen", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(aes(y = Close), method = 'loess', span = 20, formula = y ~ s(x, bs = "cs"), alpha = 0.01) +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'black') +
geom_line(aes(y = Volume.adj), stat = "identity", color = "darkgreen", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(aes(y = Close), method = 'loess', formula = y ~ s(x, bs = "cs"), alpha = 0.01) +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'black') +
geom_line(aes(y = Volume.adj), stat = "identity", color = "darkgreen", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(aes(y = Close), method = 'loess', formula = y ~ s(x, bs = "cs"), alpha = 0.01, color = "blue") +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'black') +
geom_line(aes(y = Volume.adj), stat = "identity", color = "darkgreen", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(aes(y = Close), method = 'loess', formula = y ~ s(x, bs = "cs"),color = "blue") +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'black') +
geom_line(aes(y = Volume.adj), stat = "identity", color = "darkgreen", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(aes(y = Close), method = 'loess', color = "blue") +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'black') +
geom_line(aes(y = Volume.adj), stat = "identity", color = "darkgreen", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(aes(y = Close), method = 'loess', color = "blue", span = 1) +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'black') +
geom_line(aes(y = Volume.adj), stat = "identity", color = "darkgreen", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(aes(y = Close), method = 'loess', color = "blue", span = 0.1) +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
? geom_smooth
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'black') +
geom_line(aes(y = Volume.adj), stat = "identity", color = "darkgreen", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(aes(y = Close), method = 'loess', color = "blue", span = 0.1, size = 0.5) +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'black') +
geom_line(aes(y = Volume.adj), stat = "identity", color = "darkgreen", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(aes(y = Close), method = 'loess', color = "blue", span = 0.1, linewidth = 0.5) +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
# facet wrap each day, add volume of each data point to the bottom, use separate axis for line and bar
p_volume <- ggplot(df, aes(x = Date)) + geom_line(aes(y = Close), color = 'black') +
geom_line(aes(y = Volume.adj), stat = "identity", color = "darkgreen", alpha = 0.5) +
labs(title = "AAPL", x = "Time", y = "Close Price") +
theme_minimal() + geom_smooth(aes(y = Close), method = 'loess', color = "orange", span = 0.1, linewidth = 0.5) +
facet_wrap(~format(Date, "%Y-%m-%d"), scales = "free_x")
p_volume
head(df)
? drop
